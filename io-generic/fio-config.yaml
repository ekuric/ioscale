# FIO Test Configuration - Mixed Hosts Mode (Auto-detection)
# This configuration demonstrates the auto-detection capability where the script
# automatically determines whether to use virtctl or SSH for each host

# VM/Host Configuration
vm:
  # Method 1: External host file (recommended for mixed environments)
  #host_file: "mixed-hosts.txt"
  
  # Alternative Method 2: Simple host list with mixed VM and server names
  #hosts: "vm-1 vm-2 myhost.test.com" 
  #  vm-3 vm-4 vm-5" 
  # server1 server2 vm-3"
  
  # Alternative Method 3: Host pattern expansion
  host_pattern: "vm-{1..200}" #100}"
  
  # Alternative Method 4: Label-based selection (VMs only)
  #host_labels: "type=vm"
  
  # OpenShift/Kubernetes namespace for VMs (ignored for regular servers)
  namespace: "default"

# Storage Configuration
storage:
  # Per-host device configuration (MANDATORY - no global fallback for safety)
  devices:
    # OpenShift VMs (typically use virtual devices) - using patterns for efficiency
    "vm-{1..200}": "vdc"
    
    # Individual hosts (for special cases)
    "myhost.test.com": "sdc"
  
  # Mount point for the test filesystem
  mount_point: "/root/tests/data"
  
  # Filesystem type to create
  filesystem: "xfs"

# FIO Test Configuration
fio:
  # Test file size (e.g., "1G", "500M", "10G")
  test_size: "10G"
  
  # Test runtime in seconds
  runtime: "300"
  
  # Block sizes to test (space-separated)
  block_sizes: "4k 8k 128k 1024k 4096k"
  
  # I/O patterns to test (space-separated)
  io_patterns: "read write randread randwrite"
  
  # Number of parallel jobs
  numjobs: "4"
  
  # I/O depth
  iodepth: "16"
  
  # Direct I/O (bypass page cache)
  direct_io: "1"

  # rate_iops  - uncomment if there need to impose rate iops
  # rate_iops: "1000" 

# Output Configuration
output:
  # Directory to store results on remote hosts
  directory: "/root/fio-results"
  
  # Output format (json+, normal, etc.)
  format: "json+"
