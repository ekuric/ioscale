# FIO Remote Testing Configuration
# This YAML file configures all aspects of the FIO performance testing script

# Virtual Machine Configuration
vm:
  # Method 1: Simple list (for small numbers)
  hosts: "vm1"                   # Space-separated list of VM hostnames
  
  # Method 2: Host range expansion (for large numbers)
  # host_pattern: "vm{1..200}"     # Bash-style range expansion
  # host_pattern: "test-vm-{001..050}"  # Zero-padded numbers
  
  # Method 3: Label-based selection (dynamic discovery)
  # host_labels: "app=fio-test,env=performance"
  
  # Method 4: External host file
  # host_file: "/path/to/hostlist.txt"
  
  namespace: "default"           # Kubernetes namespace for VMs

# Storage Configuration
storage:
  device: "vdc"                  # Block device to test (without /dev/ prefix)
  mount_point: "/root/tests/data" # Mount point for test data
  filesystem: "xfs"              # Filesystem type (xfs, ext4, etc.)

# FIO Test Configuration
fio:
  test_size: "5GB"               # Size of test files
  runtime: 300                   # Test runtime in seconds
  block_sizes: "4k 8k 128k 4096k" # Space-separated list of block sizes
  io_patterns: "randread randwrite read write" # Space-separated list of I/O patterns
  numjobs: 16                    # Number of parallel jobs
  iodepth: 16                    # I/O queue depth
  direct_io: 1                   # Use direct I/O (1=yes, 0=no)

# Output Configuration
output:
  directory: "/root/fio-results"  # Directory for test results on VMs
  format: "json+"                # Output format (json+, normal, terse)

# HOST SELECTION EXAMPLES:
# Choose ONE method below based on your needs

# Example 1: Host Range Patterns (for large numbers)
# vm:
#   host_pattern: "vm{1..200}"           # Creates vm1, vm2, ..., vm200
#   # host_pattern: "test-{001..050}"    # Creates test-001, test-002, ..., test-050
#   # host_pattern: "worker-{01..10}"    # Creates worker-01, worker-02, ..., worker-10

# Example 2: Label-based Selection (dynamic discovery)
# vm:
#   host_labels: "app=fio-test"                    # Select VMs with label app=fio-test
#   # host_labels: "env=performance,tier=storage"  # Multiple labels (AND condition)
#   # host_labels: "workload=storage-test"         # Custom workload label

# Example 3: External Host File
# vm:
#   host_file: "/path/to/hosts.txt"      # File with one hostname per line
#   # host_file: "./vm-list.txt"         # Relative path to host file

# Example configurations for different test scenarios
# Uncomment and modify as needed:

# Quick Development Test
# fio:
#   test_size: "1GB"
#   runtime: 60
#   block_sizes: "4k 64k"
#   io_patterns: "randread randwrite"
#   numjobs: 4
#   iodepth: 8

# Comprehensive Performance Test
# fio:
#   test_size: "20GB"
#   runtime: 600
#   block_sizes: "4k 8k 16k 32k 64k 128k 256k 512k 1024k"
#   io_patterns: "randread randwrite read write randrw"
#   numjobs: 32
#   iodepth: 32

# Multi-VM Load Test
# vm:
#   hosts: "vm1 vm2 vm3 vm4"
# fio:
#   test_size: "10GB"
#   runtime: 1800  # 30 minutes
#   numjobs: 8
#   iodepth: 16

# Storage Vendor Benchmark
# fio:
#   test_size: "50GB"
#   runtime: 3600  # 1 hour
#   block_sizes: "4k 8k 64k 1024k"
#   io_patterns: "randread randwrite randrw"
#   numjobs: 64
#   iodepth: 64

# LARGE SCALE EXAMPLES:

# 200 VMs with pattern expansion
# vm:
#   host_pattern: "storage-vm{001..200}"
#   namespace: "storage-testing"
# fio:
#   test_size: "10GB"
#   runtime: 1800
#   block_sizes: "4k 64k 1024k"
#   io_patterns: "randread randwrite"

# Dynamic selection of all VMs with storage-test label
# vm:
#   host_labels: "workload=storage-performance"
#   namespace: "performance"
# fio:
#   test_size: "20GB"
#   runtime: 3600
#   block_sizes: "4k 8k 64k"
#   io_patterns: "randread randwrite read write"

# Production load test across multiple environments
# vm:
#   host_file: "/etc/fio-testing/production-vms.txt"
#   namespace: "production"
# fio:
#   test_size: "100GB"
#   runtime: 7200  # 2 hours
#   block_sizes: "4k 64k 1024k"
#   io_patterns: "randrw" 